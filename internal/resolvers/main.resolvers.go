package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"errors"

	es "github.com/aereal/otelgqlgen/internal/execschema"
	"github.com/aereal/otelgqlgen/internal/model"
)

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, name string) (*model.User, error) {
	if name == "forbidden" {
		return nil, errors.New("forbidden")
	}
	return &model.User{Name: name}, nil
}

// Root is the resolver for the root field.
func (r *queryResolver) Root(ctx context.Context, num *int, rootInput *model.RootInput) (bool, error) {
	return true, nil
}

// Query returns es.QueryResolver implementation.
func (r *Resolver) Query() es.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
